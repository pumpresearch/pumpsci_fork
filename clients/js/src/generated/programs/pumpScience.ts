/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { ClusterFilter, Context, Program, PublicKey } from '@metaplex-foundation/umi';
import { getPumpScienceErrorFromCode, getPumpScienceErrorFromName } from '../errors';

/**
 * Program address
 *
 * @category Programs
 */
export const PUMP_SCIENCE_PROGRAM_ID = 'G9sh8zEyXBzXRhRUj5nwbjQPNaeu1uPE7g5UBRNSs17Y' as PublicKey<'G9sh8zEyXBzXRhRUj5nwbjQPNaeu1uPE7g5UBRNSs17Y'>;

export function createPumpScienceProgram(): Program {
  return {
    name: 'pumpScience',
    publicKey: PUMP_SCIENCE_PROGRAM_ID,
    getErrorFromCode(code: number, cause?: Error) {
      return getPumpScienceErrorFromCode(code, this, cause);
    },
    getErrorFromName(name: string, cause?: Error) {
      return getPumpScienceErrorFromName(name, this, cause);
    },
    isOnCluster() {
      return true;
    },
  };
}

export function getPumpScienceProgram<T extends Program = Program>(context: Pick<Context, 'programs'>, clusterFilter?: ClusterFilter): T {
  return context.programs.get<T>("pumpScience", clusterFilter);
}

export function getPumpScienceProgramId(context: Pick<Context, 'programs'>, clusterFilter?: ClusterFilter): PublicKey {
  return context.programs.getPublicKey("pumpScience", PUMP_SCIENCE_PROGRAM_ID, clusterFilter);
}
